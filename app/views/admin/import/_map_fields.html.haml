- form_tag nil, :id => 'map_fields_form', :method => :post do
  .backgrounds.big-header
    = text_field_tag :set_name,(@set ? @set.name : ''), :class => 'field_name'
    = hidden_field_tag :set_id, @set.id if @set
    .interact-links
      = fg_submit_tag 'import.button'
  #content.grid_16.alpha.omega
    .grid_12.alpha
      .inner-content
        - @parameters.each do |arr|
          = hidden_field_tag arr[0], arr[1]
        - unless @rows.empty?
          .map_fields
            %table
              %thead
                %tr
                  - (1..@rows[0].size).each do |c|
                    - selected_field = nil
                    - @fields.find { |field| 
                    -   selected_field = @set ? @set.fields[c.to_s].to_i : (field[1] if field[0].kind_of?(String) && @rows[0][c-1].kind_of?(String) && field[0].match(Regexp.new(@rows[0][c-1],'i')))
                    - }
                    %th.enhanced= select_tag "fields[#{c}]", options_for_select(@fields,selected_field), :include_blank => true
              %tbody
                - @rows.each do |row|
                  %tr
                    - row.each do |column|
                      - if RUBY_VERSION.to_f >= 1.9
                        %td= truncate(h(column), :lenght => 255).force_encoding('utf-8')
                      - else
                        %td= truncate(h(column), :lenght => 255)
    #right-sidebar.grid_4.omega
      .step
        = check_box_tag :ignore_first_row, true,(@set ? @set.ignore_first_row : true), :id => 'ignore_first_row_option'
        = label_tag :ignore_first_row, t('import.ignore_first_row')
        %br
        = check_box_tag :save_set
        = label_tag :save_set, t('import_set.save')
