= render :partial => 'tabs'
- form_for [:admin, media], :html => { :multipart => true, :id => 'wrap'} do |f|
  .backgrounds.big-header
    = f.text_field :name, :id => 'media-title'
    .interact-links
      = fg_submit_tag (media.new_record? ? 'media.create.action' :'save_changes')
      = I18n.t('or')
      = link_to I18n.t('media.back').capitalize, admin_attachments_path(:file_type => find_media_type_from_content_type(media) ), :class => 'back-link'

  #content.grid_16.alpha.omega
    #media-modify.grid_12.alpha
      .media-modify-wrap
        - permalink = "#{request.protocol}#{request.host_with_port}/#{media.public_filename}"
        %h2.permalink
          = I18n.t('permalink', :count => 1).capitalize
          \:
          = link_to permalink, permalink

        - if largest_thumb = thumbnails.shift
          .large-image.media-image-container.grid_7.omega
            = image_tag largest_thumb.public_filename
            %br
            %span.media-size
              = I18n.t("media.thumbnails.#{largest_thumb.thumbnail}").upcase
            %br
            %span.media-size-pixels
              = "#{largest_thumb.width} x #{largest_thumb.height} #{I18n.t('media.pixel', :count => 2)}"

        .large-info-container.grid_5.alpha.omega
          - if media.kind_of?(Picture)
            .large-info-block
              %span.large-info-name.truncate
                = I18n.t('media.filename').capitalize
              %span.large-info-value
                = media.filename
              .clear
            .large-info-block
              %span.large-info-name
                = I18n.t('media.picture.original_size').capitalize
              - size = "#{media.width} x #{media.height} #{I18n.t('media.pixel', :count => 2)}"
              = link_to size, permalink, :class => 'large-info-value'
              .clear
          .large-info-block
            %span.large-info-name
              = I18n.t('media.file_type').capitalize
            %span.large-info-value
              = media.file_type.upcase
            .clear
          .large-info-block
            %span.large-info-name
              = I18n.t('media.updated_at').capitalize
            %span.large-info-value
              = media.updated_at.to_s(:short)
            .clear
          .large-info-block
            %span.large-info-name
              = I18n.t('media.size').capitalize
            %span.large-info-value
              = "#{media.size/1024} #{I18n.t('media.byte.kilo')}"
            .clear
          = f.file_field :uploaded_data
        .clear

        - thumbnails.each do |thumb|
          .grid_4.alpha.omega.media-image-container
            = image_tag thumb.public_filename
            %br
            %span.media-size
              = I18n.t("media.thumbnails.#{thumb.thumbnail}").upcase
            %br
            %span.media-size-pixels
              = "#{thumb.width} x #{thumb.height} #{I18n.t('media.pixel', :count => 2)}"

    #right-sidebar.grid_4.omega
      .step
        = link_to I18n.t('media.destroy.action').capitalize, [:admin, media], :confirm => I18n.t('media.destroy.confirm').capitalize, :method => :delete, :class => 'small-icons delete'
        .clear    
      .step.open
        %a.small-icons.step-title{ :href => "#" }
          Associated to collection
        #association-media-tree.inner-step.init-tree
          %ul
            = hidden_field_tag "#{f.object_name}[attachment_category_ids][]" 
            = render :partial => 'admin/categories/associated_elements', :locals => { :association_id => 'attachment_category_ids', :element => media, :category_ids => media.attachment_category_ids, :categories => find_categories_from_content_type(media) }
            .clear
    .clear
