#sidebar.grid_4.omega.alpha
  .backgrounds.header
    %span.backgrounds.action-button.create-action
      %span.big-icons.new-category
      %span.small-icons.arrow
      %span.create-list
        %span.shadow
        %span.big-icons.create-folder
          = I18n.t('folder.create').capitalize
          -#%span.small-icons.create-smart-folder
          -#= I18n.t('folder.smart').capitalize
    %span.backgrounds.action-button.update-action
      %span.small-icons.more-actions
      %span.small-icons.arrow
        %span.update-list
          %span.shadow
          %span.small-icons.modify-folder
            = I18n.t('folder.edit').capitalize
          %span.small-icons.duplicate-folder
            = I18n.t('folder.duplicate').capitalize
          %span.small-icons.delete-folder
            = I18n.t('folder.destroy').capitalize
  .backgrounds.sidebar-background
  .sidebar-content
    %h2.small-icons{ :class => icon_class }
      = link_to_function I18n.t(sidebar_title).capitalize, "select_all_elements_without_category()"
    .init-tree.a-tree.category-tree{ :id => tree_id }
  
    - form_for [:admin, Category.new], :html => { :multipart => true } do |f|
      #imageUploadDialogLeftSidebar.upload-lightbox-container.white
        #imageUploadLeftSidebar
          = f.file_field :uploaded_data
          = hidden_field_tag :target, params[:target]
          = hidden_field_tag :target_id, params[:target_id]
          = f.submit I18n.t('save').capitalize

      - session_key = ActionController::Base.session_options[:key]
      - javascript_tag do
        function initImageUploadLeftSidebar(link){
        $('#imageUploadDialogLeftSidebar').dialog('open');
        $('#imageUploadDialogLeftSidebar').html('<div id="imageUploadLeftSidebar"></div>');
        $('#imageUploadLeftSidebar').uploadify({
        'uploader': '/images/uploadify/uploadify.swf',
        = "'cancelImg': '#{image_path('admin/big-icons/delete-icon.png')}',"
        = "'script': '#{admin_medias_path(:file_type => 'picture')}',"
        = "'buttonImg' :'#{image_path("uploadify/upload-picture_#{I18n.locale}.png")}',"
        'width' :'154',
        'height' :'24',
        'scriptData': {
        'format': 'json',
        = "'authenticity_token': encodeURIComponent('#{u form_authenticity_token}')," if protect_against_forgery?
        = "'#{session_key}': encodeURIComponent('#{cookies[session_key]}')"
        },
        'ScriptAccess': 'always',
        'multi': 'true',
        'displayData': 'speed',
        'onComplete': function(e,queueID,fileObj,response,data){
        if(typeof JSON=="object" && typeof JSON.parse=="function")
        {
        result = JSON.parse(response);
        }
        else{
        result = eval('(' + response + ')');
        }
        if (result.result == 'success'){
        $.ajax({
        success: function(result){
        $.tree.focused().refresh();
        },
        error: function(){
        },
        = "data:  { 'category[attachment_ids]': [result.id], authenticity_token: encodeURIComponent('#{cookies[session_key]}') },"
        dataType: 'json',
        type: 'put',
        url: '/admin/categories/'+ link + '.json',
        });
        } else {
        display_notification_message('error',result.error)
        }
        },
        'onAllComplete': function(){
        $('#imageUploadDialogLeftSidebar').dialog('close');
        }
        });}

      = javascript_include_tag %w(swfobject jquery.uploadify)
